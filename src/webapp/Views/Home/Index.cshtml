<div class="splash-container">
    <div class="splash">
        <img alt="PsakeZero" src="/assets/img/logo.png" style="height: 300px">

        <code class="code-snippet">Invoke-WebRequest <span>psakezero.com |</span> Invoke-Expression</code>

    </div>
</div>

<div class="content-wrapper">
    <div class="content">
        <h2 class="content-head is-center">Ships with typical opinions</h2>
        <div class="pure-g">
            <div class="l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4">
                <h3 class="content-subhead">
                    <i class="fa fa-terminal"></i> Answer a handful of prompts
                </h3>
                <p>
                    Once you start the script it will walk you through a few questions to get things setup. A couple of names and some defaults and you are done.
                </p>
            </div>
            <div class="l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4">
                <h3 class="content-subhead">
                    <i class="fa fa-bolt"></i> Bootstraps Psake and Nuget
                </h3>
                <p>
                    Part of the install process your repo will get local copies of Psake and Nuget.
                </p>
            </div>
            <div class="l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4">
                <h3 class="content-subhead">
                    <i class="fa fa-git"></i> Sets up your dot git and readme files
                </h3>
                <p>
                    You'll also get started with a simple .gitattributes and a community driven .gitignore file from GitHub.
                </p>
            </div>
            <div class="l-box pure-u-1 pure-u-md-1-2 pure-u-lg-1-4">
                <h3 class="content-subhead">
                    <i class="fa fa-database"></i> Gives you CI and database migration options
                </h3>
                <p>
                    If you project is headed to a CI server it you can optionally drop in a Psake task to wrap those specifics. Same goes for dataabse migration tasks.
                </p>
            </div>
        </div>
    </div>

    <div class="ribbon l-box-lrg pure-g">
        <div class="l-box-lrg is-center pure-u-1 pure-u-md-1-2 pure-u-lg-2-5">
            <img class="pure-img-responsive service-icons" alt="Powershell" src="~/Assets/img/powershell-logo.png" />
            <img class="pure-img-responsive service-icons" alt="Psake" src="~/Assets/img/psake-logo.png">
            <img class="pure-img-responsive service-icons" alt="Nuget" src="~/Assets/img/nuget-logo.png">
        </div>
        <div class="pure-u-1 pure-u-md-1-2 pure-u-lg-3-5">
            <h2 class="content-head content-head-ribbon">Get your tools with no fuss</h2>
            <p>
                It all starts with Powershell. Windows machines has it installed and that is where we start. We use this to get the other
                things installed. Starting with Psake from the Powershell Gallery. From there we also drop in Nuget into
                your repo so that it will be available for the build script.
            </p>
        </div>
    </div>

    <div class="content">
        <h2 class="content-head is-center">How does it work?</h2>
        <div class="pure-g">
            <div class="l-box-lrg pure-u-1 pure-u-md-1-3">
                <h3><i class="fa fa-github" aria-hidden="true"></i> Look at the script</h3>
                <p>You'll need to execute a remote script. That can be scarey so but it is open source so you can see what the
                    script does at any time.</p>
                <h4><a href="https://github.com/psakezero">https://github.com/psakezero</a></h4>
                <p>If you have any questions, comments or concerns please open an <a href="https://github.com/psakezero/webapp/issues">issue</a>                    and we'll work on it</p>
            </div>
            <div class="l-box-lrg pure-u-1 pure-u-md-1-3">
                <h3><i class="fa fa-terminal"></i> Run the remote script</h3>
                <p>You'll need to execute a remote script but, again, it is open for you to see</p>
                <p>Run the following:</p>
                <code>Invoke-WebRequest psakezero.com | Invoke-Expression<br>
                iwr psakezero.com | iex</code>
                <p>
                    This uses the Invoke-WebRequest cmdlet to GET the script that lives on GitHub and send it to your client. From there it is
                    piped to the Invoke-Expression cmdlet where it executes on your machine
                </p>
            </div>
            <div class="l-box-lrg pure-u-1 pure-u-md-1-3">
                <h3><i class="fa fa-question" aria-hidden="true"></i> Answer a handful of questions</h3>
                <p>
                    The script will prompt you for a number of questions. Your answers will drive what the resulting source tree looks like.
                </p>
                <p>The questions are:</p>
                <ul>
                    <li>What your company and product names are</li>
                    <li>What your source code, build artifacts, tools directory and build script should be named</li>
                    <li>If the project should be setup to use Nuget Package Restore</li>
                    <li>If TeamCity log messages and Octopus Deploy msbuild tasks should be enabled</li>
                    <li>Add unit test and rebuild database Psake tasks</li>
                </ul>
            </div>
        </div>
    </div>

    <div class="footer l-box is-center">
       PsakeZero — @DateTime.Now.ToLocalTime().Year &copy;
    </div>

</div>